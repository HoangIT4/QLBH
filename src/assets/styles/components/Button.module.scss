@use '../variables' as vars;
@use '../mixins' as mixins;

.button {
    @include mixins.button_base;

    &.primary {
        @include mixins.button_primary;
    }

    &.secondary {
        @include mixins.button_secondary;
    }

    &.success {
        background-color: vars.$success-color;
        color: white;

        &:hover:not(:disabled) {
            background-color: darken(vars.$success-color, 10%);
            transform: translateY(-1px);
            @include mixins.shadow('md');
        }
    }

    &.warning {
        background-color: vars.$warning-color;
        color: white;

        &:hover:not(:disabled) {
            background-color: darken(vars.$warning-color, 10%);
            transform: translateY(-1px);
            @include mixins.shadow('md');
        }
    }

    &.danger {
        background-color: vars.$error-color;
        color: white;

        &:hover:not(:disabled) {
            background-color: darken(vars.$error-color, 10%);
            transform: translateY(-1px);
            @include mixins.shadow('md');
        }
    }

    &.outline {
        background-color: transparent;
        border: 1px solid currentColor;

        &.primary {
            color: vars.$primary-color;
            border-color: vars.$primary-color;

            &:hover:not(:disabled) {
                background-color: vars.$primary-color;
                color: white;
            }
        }

        &.success {
            color: vars.$success-color;
            border-color: vars.$success-color;

            &:hover:not(:disabled) {
                background-color: vars.$success-color;
                color: white;
            }
        }

        &.danger {
            color: vars.$error-color;
            border-color: vars.$error-color;

            &:hover:not(:disabled) {
                background-color: vars.$error-color;
                color: white;
            }
        }
    }

    &.ghost {
        background-color: transparent;
        border: none;

        &:hover:not(:disabled) {
            background-color: rgba(vars.$primary-color, 0.1);
        }
    }

    // Sizes
    &.small {
        padding: vars.$spacing-xs vars.$spacing-sm;
        font-size: 0.875rem;
    }

    &.large {
        padding: vars.$spacing-md vars.$spacing-lg;
        font-size: 1.125rem;
    }

    &.fullWidth {
        width: 100%;
    }

    // Loading state
    &.loading {
        position: relative;
        color: transparent;

        &::after {
            content: '';
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            width: 16px;
            height: 16px;
            border: 2px solid transparent;
            border-top-color: currentColor;
            border-radius: 50%;
            animation: spin 1s linear infinite;
        }
    }
}
